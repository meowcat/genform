/*
 *  msknownelements.cpp, part of GenForm by M. Meringer Copyright (C) 2015
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
*/

#include "msdef.h"
#include "msexception.h"
#include "msknownelements.h"

using namespace std;

KnownElements::KnownElements()
{
	// element symbols
	const char* pSymbols[e_ElementCount] =
	{
		"H" ,"He","Li","Be","B" ,
		"C" ,"N" ,"O" ,"F" ,"Ne",
		"Na","Mg","Al","Si","P" ,
		"S" ,"Cl","Ar","K" ,"Ca",
		"Sc","Ti","V" ,"Cr","Mn",
		"Fe","Co","Ni","Cu","Zn",
		"Ga","Ge","As","Se","Br",
		"Kr","Rb","Sr","Y" ,"Zr",
		"Nb","Mo","Tc","Ru","Rh",
		"Pd","Ag","Cd","In","Sn",

		"Sb","Te","I" ,"Xe","Cs",
		"Ba","La","Ce","Pr","Nd",
		"Pm","Sm","Eu","Gd","Tb",
		"Dy","Ho","Er","Tm","Yb",
		"Lu","Hf","Ta","W" ,"Re",
		"Os","Ir","Pt","Au","Hg",
		"Tl","Pb","Bi","Po","At",
		"Rn", "D"
	};

	// numbers of isotopes per element
	const int pIsotopeCount[e_ElementCount] =
	{
		2, 1, 2, 1, 2,
		2, 2, 3, 1, 3,
		1, 3, 1, 3, 1,
		4, 2, 3, 3, 6,
		1, 5, 2, 4, 1,
		4, 1, 5, 2, 5,
		2, 5, 1, 6, 2,
		6, 2, 4, 1, 5,
		1, 7, 1, 7, 1,
		6, 2, 8, 2, 10,
		2, 8, 1, 9, 1,
		7, 2, 4, 1, 7,
		1, 7, 2, 7, 1,
		7, 1, 6, 1, 7,
		2, 6, 2, 5, 2,
		7, 2, 6, 1, 7,
		2, 4, 1, 1, 1,
		1, 1
	};

	// isotope distributions adapted from http://www.sisweb.com/referenc/source/exactmaa.htm
	// (*) denotes ratio sums !=1 (or other exceptions)
	const double pIsotopes[][2] =
	{
		{  1.007825, 0.99990}, {  2.014102, 0.00015}, // H (*)
		{  4.002603, 1.00000}, // He (* ^3He removed)
		{  6.015123, 0.07420}, {  7.016005, 0.92580}, // Li
		{  9.012183, 1.00000}, // Be
		{ 10.012938, 0.19800}, { 11.009305, 0.80200}, // B
		{ 12.000000, 0.98900}, { 13.003355, 0.01100}, // C
		{ 14.003074, 0.99630}, { 15.000109, 0.00370}, // N
		{ 15.994915, 0.99760}, { 16.999131, 0.00038}, { 17.999159, 0.00200}, // O (*)
		{ 18.998403, 1.00000}, // F
		{ 19.992439, 0.90600}, { 20.993845, 0.00260}, { 21.991384, 0.09200}, // Ne (*)
		{ 22.989770, 1.00000}, // Na
		{ 23.985045, 0.78900}, { 24.985839, 0.10000}, { 25.982595, 0.11100}, // Mg
		{ 26.981541, 1.00000}, // Al
		{ 27.976928, 0.92230}, { 28.976496, 0.04670}, { 29.973772, 0.03100}, // Si
		{ 30.973763, 1.00000}, // P
		{ 31.972072, 0.95020}, { 32.971459, 0.00750}, { 33.967868, 0.04210}, { 35.967079, 0.00020}, // S (*)
		{ 34.968853, 0.75770}, { 36.965903, 0.24230}, // Cl
		{ 35.967546, 0.00340}, { 37.962732, 0.00063}, { 39.962383, 0.99600}, // Ar (*)
		{ 38.963708, 0.93200}, { 39.963999, 0.00012}, { 40.961825, 0.06730}, // K (*)
		{ 39.962591, 0.96950}, { 41.958622, 0.00650}, { 42.958770, 0.00140}, { 43.955485, 0.02086}, { 45.953689, 0.00004}, { 47.952532, 0.00190}, // Ca (*)
		{ 44.955914, 1.00000}, // Sc
		{ 45.952633, 0.08000}, { 46.951765, 0.07300}, { 47.947947, 0.73800}, { 48.947871, 0.05500}, { 49.944786, 0.05400}, // Ti
		{ 49.947161, 0.00250}, { 50.943963, 0.99750}, // V
		{ 49.946046, 0.04350}, { 51.940510, 0.83790}, { 52.940651, 0.09500}, { 53.938882, 0.02360}, // Cr
		{ 54.938046, 1.00000}, // Mn
		{ 53.939612, 0.05800}, { 55.934939, 0.91720}, { 56.935396, 0.02200}, { 57.933278, 0.00280}, // Fe
		{ 58.933198, 1.00000}, // Co
		{ 57.935347, 0.68270}, { 59.930789, 0.26100}, { 60.931059, 0.01130}, { 61.928346, 0.03590}, { 63.927968, 0.00910}, // Ni
		{ 62.929599, 0.69170}, { 64.927792, 0.30830}, // Cu
		{ 63.929145, 0.48600}, { 65.926035, 0.27900}, { 66.927129, 0.04100}, { 67.924846, 0.18800}, { 69.925325, 0.00600}, // Zn (*)
		{ 68.925581, 0.60100}, { 70.924701, 0.39900}, // Ga
		{ 69.924250, 0.20500}, { 71.922080, 0.27400}, { 72.923464, 0.07800}, { 73.921179, 0.36500}, { 75.921403, 0.07800}, // Ge (*)
		{ 74.921596, 1.00000}, // As
		{ 73.922477, 0.00900}, { 75.919207, 0.09000}, { 76.919908, 0.07600}, { 77.917304, 0.23500}, { 79.916521, 0.49600}, { 81.916709, 0.09400}, // Se
		{ 78.918336, 0.50690}, { 80.916290, 0.49310}, // Br
		{ 77.920397, 0.00350}, { 79.916375, 0.02250}, { 81.913483, 0.11600}, { 82.914134, 0.11500}, { 83.911506, 0.57000}, { 85.910614, 0.17300}, // Kr
		{ 84.911800, 0.72170}, { 86.909184, 0.27840}, // Rb (*)
		{ 83.913428, 0.00560}, { 85.909273, 0.09860}, { 86.908902, 0.07000}, { 87.905625, 0.82580}, // Sr
		{ 88.905856, 1.00000}, // Y
		{ 89.904708, 0.51450}, { 90.905644, 0.11270}, { 91.905039, 0.17170}, { 93.906319, 0.17330}, { 95.908272, 0.02780}, // Zr
		{ 92.906378, 1.00000}, // Nb
		{ 91.906809, 0.14840}, { 93.905086, 0.09250}, { 94.905838, 0.15920}, { 95.904676, 0.16680}, { 96.906018, 0.09550}, { 97.905405, 0.24130}, { 99.907473, 0.09630}, // Mo (*)
		{ 98.906255, 1.00000}, // Tc (* http://en.wikipedia.org/wiki/Isotopes_of_technetium)
		{ 95.907596, 0.05520}, { 97.905287, 0.01880}, { 98.905937, 0.12700}, { 99.904218, 0.12600}, {100.905581, 0.17000}, {101.904348, 0.31600}, {103.905422, 0.18700}, // Ru
		{102.905503, 1.00000}, // Rh
		{101.905609, 0.01020}, {103.904026, 0.11140}, {104.905075, 0.22330}, {105.903475, 0.27330}, {107.903894, 0.26460}, {109.905169, 0.11720}, // Pd
		{106.905095, 0.51840}, {108.904754, 0.48160}, // Ag
		{105.906461, 0.01250}, {107.904186, 0.00890}, {109.903007, 0.12490}, {110.904182, 0.12800}, {111.902761, 0.24130}, {112.904401, 0.12220}, {113.903361, 0.28730}, {115.904758, 0.07490}, // Cd
		{112.904056, 0.04300}, {114.903875, 0.95700}, // In
		{111.904826, 0.00970}, {113.902784, 0.00650}, {114.903348, 0.00360}, {115.901744, 0.14700}, {116.902954, 0.07700}, {117.901607, 0.24300}, {118.903310, 0.08600}, {119.902199, 0.32400}, {121.903440, 0.04600}, {123.905271, 0.05600}, // Sn (*)
		{120.903824, 0.57300}, {122.904222, 0.42700}, // Sb
		{119.904021, 0.00096}, {121.903055, 0.02600}, {122.904278, 0.00910}, {123.902825, 0.04820}, {124.904435, 0.07140}, {125.903310, 0.18950}, {127.904464, 0.31690}, {129.906229, 0.33800}, // Te (*)
		{126.904477, 1.00000}, // I
		{123.905894, 0.00100}, {125.904281, 0.00090}, {127.903531, 0.01910}, {128.904780, 0.26400}, {129.903510, 0.04100}, {130.905076, 0.21200}, {131.904148, 0.26900}, {133.905395, 0.10400}, {135.907219, 0.08900}, // Xe
		{132.905433, 1.00000}, // Cs
		{129.906277, 0.00110}, {131.905042, 0.00100}, {133.904490, 0.02420}, {134.905668, 0.06590}, {135.904556, 0.07850}, {136.905816, 0.11230}, {137.905236, 0.71700}, // Ba
		{137.907114, 0.00090}, {138.906355, 0.99910}, // La
		{135.907140, 0.00190}, {137.905996, 0.00250}, {139.905442, 0.88480}, {141.909249, 0.11080}, // Ce
		{140.907657, 1.00000}, // Pr
		{141.907731, 0.27130}, {142.909823, 0.12180}, {143.910096, 0.23800}, {144.912582, 0.08300}, {145.913126, 0.17190}, {147.916901, 0.05760}, {149.920900, 0.05640}, // Nd
		{144.912749, 1.00000}, // Pm (* http://en.wikipedia.org/wiki/Isotopes_of_promethium)
		{143.912009, 0.03100}, {146.914907, 0.15000}, {147.914832, 0.11300}, {148.917193, 0.13800}, {149.917285, 0.07400}, {151.919741, 0.26700}, {153.922218, 0.22700}, // Sm
		{150.919860, 0.47800}, {152.921243, 0.52200}, // Eu
		{151.919803, 0.00200}, {153.920876, 0.02180}, {154.822629, 0.14800}, {155.922130, 0.20470}, {156.923967, 0.15650}, {157.924111, 0.24840}, {159.927061, 0.21860}, // Gd
		{158.925350, 1.00000}, // Tb
		{155.924287, 0.00060}, {157.924412, 0.00100}, {159.925203, 0.02340}, {160.926939, 0.18900}, {161.926805, 0.25500}, {162.928737, 0.24900}, {163.929183, 0.28200}, // Dy
		{164.930332, 1.00000}, // Ho
		{161.928787, 0.00140}, {163.929211, 0.01610}, {165.930305, 0.33600}, {166.932061, 0.22950}, {167.932383, 0.26800}, {169.935476, 0.14900}, // Er
		{168.934225, 1.00000}, // Tm
		{167.933908, 0.00130}, {169.934774, 0.03050}, {170.936338, 0.14300}, {171.936393, 0.21900}, {172.938222, 0.16120}, {173.938873, 0.31800}, {175.942576, 0.12700}, // Yb
		{174.940785, 0.97400}, {175.942694, 0.02600}, // Lu
		{173.940065, 0.00160}, {175.941420, 0.05200}, {176.943233, 0.18600}, {177.943710, 0.27100}, {178.945827, 0.13740}, {179.946561, 0.35200}, // Hf
		{179.947489, 0.00012}, {180.948014, 0.99990}, // Ta (*)
		{179.946727, 0.00130}, {181.948225, 0.26300}, {182.950245, 0.14300}, {183.950953, 0.30670}, {185.954377, 0.28600}, // W
		{184.952977, 0.37400}, {186.955765, 0.62600}, // Re
		{183.952514, 0.00020}, {185.953852, 0.01580}, {186.955762, 0.01600}, {187.955850, 0.13300}, {188.958156, 0.16100}, {189.958455, 0.26400}, {191.961487, 0.41000}, // Os
		{190.960603, 0.37300}, {192.962942, 0.62700}, // Ir
		{189.959937, 0.00010}, {191.961049, 0.00790}, {193.962679, 0.32900}, {194.964785, 0.33800}, {195.964947, 0.25300}, {197.967879, 0.07200}, // Pt
		{196.966560, 1.00000}, // Au
		{195.965812, 0.00150}, {197.966760, 0.10100}, {198.968269, 0.17000}, {199.968316, 0.23100}, {200.970293, 0.13200}, {201.970632, 0.29650}, {203.973481, 0.06800}, // Hg (*)
		{202.972336, 0.29520}, {204.974410, 0.70480}, // Tl
		{203.973037, 0.01400}, {205.974455, 0.24100}, {206.975885, 0.22100}, {207.976641, 0.52400}, // Pb
		{208.980388, 1.00000}, // Bi
		{208.982430, 1.00000}, // Po (* http://en.wikipedia.org/wiki/Isotopes_of_polonium)
		{209.987148, 1.00000}, // At (* http://en.wikipedia.org/wiki/Isotopes_of_astatine)
		{222.017578, 1.00000}, // Rn (* http://en.wikipedia.org/wiki/Isotopes_of_radon)
		{  2.014102, 1.00000}  // D (* mass copied from above)
	};

	const int pDefaultValencies[e_ElementCount] =
	{
		1, 0, 1, 1, 3,
		4, 3, 2, 1, 0,
		1, 1, 1, 4, 3,
		2, 1, 0, 1, 1,
		1, 1, 1, 1, 1,
		1, 1, 1, 1, 1,
		1, 4, 3, 2, 1, // Val 4 for Ge although it's metalloid
		0, 1, 1, 1, 1,
		1, 1, 1, 1, 1,
		1, 1, 1, 1, 4, // Val 4 for Sn although it's metalloid

		3, 2, 1, 0, 1, // Val 3 for Sb although it's metalloid
		1, 1, 1, 1, 1,
		1, 1, 1, 1, 1,
		1, 1, 1, 1, 1,
		1, 1, 1, 1, 1,
		1, 1, 1, 1, 1,
		1, 1, 1, 1, 1,
		0, 1
	};

	// numbers of atom states
	const int pAtomStatesCount[e_ElementCount] =
	{
		3, 0, 0, 0, 0,
		6, 6, 5, 3, 0,
		0, 0, 0, 4, 6,
		11, 4, 0, 0, 0,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 3,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 0,

		0, 0, 3, 0, 0,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 0,
		0, 0, 0, 0, 0,
		0, 0
	};

	const int pAtomStates[][4] =
	{
		//{val,lon,rad,cha}
		{1,0,0,0},{0,0,1,0},{0,0,0,1},// H
		{4,0,0,0},{3,0,1,0},{3,0,0,1},{2,0,1,1},{2,1,0,0},{3,1,0,-1},// C
		{3,1,0,0},{3,0,1,1},{4,0,0,1},{2,1,1,0},{2,2,0,-1},{5,0,0,0},// N
		{2,2,0,0},{2,1,1,1},{3,1,0,1},{1,2,1,0},{1,3,0,-1},// O
		{1,3,0,0},{1,2,1,1},{2,2,0,1},// F
		{4,0,0,0},{3,0,1,0},{3,0,0,1},{2,0,1,1},//Si
		{3,1,0,0},{3,0,1,1},{4,0,0,1},{2,1,1,0},{5,0,0,0},{4,0,1,0},//P
		{2,2,0,0},{2,1,1,1},{1,2,1,0},{4,1,0,0},{4,0,1,1},
		{3,1,1,0},{3,1,0,1},{6,0,0,0},{5,0,1,0},{5,0,0,1},{1,3,0,-1},//S
		{1,3,0,0},{1,2,1,1},{2,2,0,1},{0,4,0,-1},//Cl
		{1,3,0,0},{1,2,1,1},{2,2,0,1},//Br
		{1,3,0,0},{1,2,1,1},{2,2,0,1}//I
	};

	int StateIdx=0,IsotopeIdx=0,k;

    for(int i=0;i<e_ElementCount;i++)
    {
		ElementInfo EI;

		//EI.m_iNumber = i+1;
		EI.m_strSymbol = pSymbols[i];
		EI.m_iValency = pDefaultValencies[i];

		for(k=pIsotopeCount[i];k>0;k--)
		{
			EI.m_mapLrIsotope[(int)(pIsotopes[IsotopeIdx][0]+0.5)]=pIsotopes[IsotopeIdx][1];
			EI.m_mapHrIsotope[pIsotopes[IsotopeIdx][0]]=pIsotopes[IsotopeIdx][1];
			IsotopeIdx++;
		}

        //for some isotope distributions the sum of given rations is no 1, thus normalize:
        EI.m_mapLrIsotope.Normalize(1.0,false);
        EI.m_mapHrIsotope.Normalize(1.0,false);

        EI.m_iNominalMass=EI.m_mapLrIsotope.GetBasePeak()->first;
        EI.m_dNominalMass=EI.m_mapHrIsotope.GetBasePeak()->first;

        if(pAtomStatesCount[i]>0 )
        	for(k=pAtomStatesCount[i];k>0;k--)
			   {
				EI.m_vecStateVal.push_back(pAtomStates[StateIdx][0]);
				EI.m_vecStateLon.push_back(pAtomStates[StateIdx][1]);
				EI.m_vecStateRad.push_back(pAtomStates[StateIdx][2]);
				EI.m_vecStateCha.push_back(pAtomStates[StateIdx][3]);
				StateIdx++;
			   }
        else // No explicit atomstates, thus give a default state
           {
            EI.m_vecStateVal.push_back(EI.m_iValency);
            EI.m_vecStateLon.push_back(0);
            EI.m_vecStateRad.push_back(0);
            EI.m_vecStateCha.push_back(0);
           }

        m_vecElementInfo.push_back(EI);
        m_mapSymbolCode[EI.m_strSymbol] = i;
    }
}

int KnownElements::GetCode(const std::string &strSymbol)
{
    std::map<std::string,int>::iterator it=m_mapSymbolCode.find(strSymbol);
    if(it==m_mapSymbolCode.end())
    {
		string s="error: unknown element symbol '" + strSymbol +"'";
		MsError Me(s); throw(Me);
	}

    return it->second;
}
